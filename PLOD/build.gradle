apply plugin: 'com.android.application'

android.applicationVariants.all { variant ->
    variant.mergeResources.doFirst {
        def isReleaseMode = false
        for(String s : gradle.startParameter.taskNames) {
            if(s.contains("Release")) {
                isReleaseMode=true
                break
            }
        }
        if (isReleaseMode) {
            android.sourceSets.main.assets.srcDirs = ['src/main/assets_release']
            android.sourceSets.debug.assets.srcDirs = ['src/main/assets_release']
            android.sourceSets.release.assets.srcDirs = ['src/main/assets_release']
        }
    }
}

android {
    lintOptions {
        tasks.lint.enabled = false
        checkReleaseBuilds false
        abortOnError false
    }
    compileSdkVersion ver_compileSdkVersion

    defaultConfig {
        applicationId "com.knziha.plod.plaindict"
        minSdkVersion ver_minsdk
        targetSdkVersion ver_aimsdk
        versionCode 71
        versionName "5.6"
        vectorDrawables.generatedDensities = ['hdpi']
        multiDexEnabled true
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }
    buildFeatures {
        dataBinding = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        debug {
            buildConfigField "boolean","isDebug","true"
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
            buildConfigField "boolean","isDebug","false"
        }
    }

    sourceSets {
        def isReleaseMode = false
        for(String s : gradle.startParameter.taskNames) {
            if(s.contains("Release")) {
                isReleaseMode=true
                break
            }
        }
        main {
            if(isReleaseMode) {
                assets.srcDirs = ['src/main/assets_release']
            }
        }
    }
}

dependencies {
    //api 'com.implimentz:unsafe:0.0.6'

    //api "com.github.luben:zstd-jni:1.5.0-4@aar"

    //api 'org.lz4:lz4-pure-java:1.8.0'

    api 'com.alibaba:fastjson:1.2.62'
    api (libs_coordinator){
        exclude module:"core"
    }
    //api 'org.jruby.joni:joni:2.1.30'
    //api 'org.jruby.jcodings:jcodings:1.0.55'
    //implementation 'com.android.support:support-dynamic-animation:27.1.1'
    api 'org.anarres.lzo:lzo-core:1.0.6'
    api project(path: ':viewpager')
    api project(path: ':GestureView')
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.jdom:jdom:2.0.2'


    compileOnly project(':Metaline:Metaline')
    annotationProcessor project(':Metaline:Metaline')
    testCompileOnly project(':Metaline:Metaline')
    testAnnotationProcessor project(':Metaline:Metaline')

    api 'org.apache.commons:commons-text:1.8'
    api (libs_clang)
    api project(':recyclerViewFastScroller')
    api project(':twowaygridview')
    if (use_compat_official == '1') {
        api(libs_compat)
    } else {
        implementation project(':AxtAppCompat')
        implementation(libs_appres){
            exclude module:"core"
        }
        configurations {
            //all*.exclude group: 'androidx.appcompat'
        }
    }

    if (use_mat_official == '1') {
        api(libs_mat) {
            exclude module: "appcompat"
            exclude module: "appcompat-resources"
        }
    } else {
        implementation project(':AweDesigner')
    }
    if (use_prefer_official == '1') {
        api(libs_prefer) {
            exclude module: "appcompat"
            exclude module: "appcompat-resources"
        }
    } else {
        api(project(':AppPreference'))
    }
    api project(':GlideModule:glide')
    api project(':drag_sort_lib')
    api project(':colorpicker')
    api project(':filepicker')

    api project(':Logger')
    api project(':Paging')

    api fileTree(include: ['*.jar'], dir: 'libs')
    api(libs_anno)
    //testImplementation 'junit:junit:4.12'
    //implementation 'me.weishu:free_reflection:2.1.0'
    api ('androidx.palette:palette:1.0.0'){
        exclude module:"core"
    }
    implementation 'org.jetbrains:annotations:15.0'

    implementation "io.noties.markwon:core:4.5.0"
    //api ('com.github.barteksc:pdfium-android:1.9.0')

    implementation 'com.bytedance.boost_multidex:boost_multidex:1.0.1'

}
